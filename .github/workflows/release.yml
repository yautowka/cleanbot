name: release

on: push

jobs:
  build_linux:
    runs-on: ubuntu-latest
    env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      #- name: Checkout
      #  uses: actions/checkout@v4

      - name: Get the last release name
        id: get_release
        run: |
          release_name=$(gh release view -R krille-chan/fluffychat --json name -q .name)
          echo "release_name=${release_name}" >> $
          #ls .github/workflows/
          
      - name: run build workflow
        uses: ./.github/workflows/build_release.yml

      - name: Check if release has changed
        id: check_release
        run: |
          if [ "${{ vars.LAST_FLUFFYCHAT_RELEASE }}" == "${{ env.release_name }}" ]; then
            echo "Release has not changed. Exiting."
            exit 0
          else
            echo "Release has changed."
            echo "new_release=${{ env.release_name }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Perform actions if release has changed
        if: steps.check_release.outputs.new_release != ''
        run: |
            echo "Performing actions for the new release: ${{ steps.check_release.outputs.new_release }}"
            #cd fluffychat
            #cat .github/workflows/versions.env >> $GITHUB_ENV
            #gh variable list
            #release_name=$(gh release view -R krille-chan/fluffychat --json name -q .name)
            gh variable set LAST_FLUFFYCHAT_RELEASE --body "${{ steps.check_release.outputs.new_release }}"
            #gh variable list
            #vars.LAST_FLUFFYCHAT_RELEASE=123
